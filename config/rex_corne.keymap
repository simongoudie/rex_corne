#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <5>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        Alpha {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R      &kp T    &kp Y    &kp U      &kp I  &kp O      &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D         &kp F      &kp G    &kp H    &kp J      &kp K  &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp LSHFT     &kp C      &kp V    &kp B    &kp N      &kp M  &kp COMMA  &kp DOT   &kp FSLH
                         &kp LEFT_ALT  &kp LCTRL  &mo 1    &kp RET  &kp SPACE  &mo 2
            >;
        };

        Lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR     &kp PERCENT         &kp CARET          &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&bt BT_CLR  &kp N1           &kp N2       &kp N3    &kp N4         &kp N5              &kp N6             &kp N7         &kp N8        &kp N9                &kp N0                 &kp GRAVE
&kp LSHFT   &kp MINUS        &kp EQUAL    &trans    &kp BACKSLASH  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp GRAVE      &trans        &kp COMMA             &kp PERIOD             &trans
                                          &trans    &trans         &trans              &trans             &trans         &trans
            >;
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1         &kp F2     &kp F3  &kp F4      &kp F5         &kp F6           &kp F7    &kp F8        &kp F9     &kp F10       &kp F11
&trans  &kp PAGE_UP    &trans     &trans  &kp HOME    &kp END        &kp LEFT_ARROW   &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans        &kp F12
&trans  &kp PAGE_DOWN  &kp K_CUT  &trans  &kp K_COPY  &kp K_PASTE    &kp PRINTSCREEN  &trans    &trans        &trans     &kp LEFT_GUI  &trans
                                  &trans  &trans      &trans         &trans           &trans    &trans
            >;
        };

        Calc {
            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4       &kp N7  &kp N8  &kp N9  &kp PLUS          &kp MINUS   &kp BSPC
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &kp C_MUTE    &kp C_VOLUME_UP    &kp N4  &kp N5  &kp N6  &kp ASTERISK      &kp FSLH    &ext_power EP_ON
&rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &trans        &kp C_VOL_DN       &kp N1  &kp N2  &kp N3  &kp K_CALCULATOR  &kp K_COPY  &bt BT_CLR_ALL
                                                   &trans           &trans        &trans             &trans  &kp N0  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Both_3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
